syntax = "proto3";



message SyncHeaderMsg
{
	bytes version = 1;										
	bytes id      = 4;										
}

message CheckHash
{
    uint64 		  begin		= 1;
    uint64 		  end       = 2;
    string 		  hash      = 3;
}


message SyncGetPledgeNodeReq
{
	SyncHeaderMsg syncHeaderMsg = 1;
}

message SyncGetPledgeNodeAck
{
	repeated string ids = 1;
}


message SyncVerifyPledgeNodeReq
{
	SyncHeaderMsg syncHeaderMsg = 1;
	repeated string ids         = 2;
}

message SyncVerifyPledgeNodeAck
{
	repeated string ids         = 1;
}


message SyncGetnodeInfoReq
{
    SyncHeaderMsg syncHeaderMsg = 1;						
}

message SyncGetnodeInfoAck
{
    SyncHeaderMsg syncHeaderMsg = 1;
    uint64 		  height		= 2;
    bytes 		  hash			= 3;
}


message VerifyReliableNodeReq
{
	SyncHeaderMsg syncHeaderMsg = 1;
    int64 		  height		= 2;
}

message VerifyReliableNodeAck
{
	SyncHeaderMsg syncHeaderMsg = 1;
    string        id            = 2;
    uint64 		  height		= 3;
    bytes 		  hash			= 4;
}


message SyncBlockInfoReq
{
    SyncHeaderMsg syncHeaderMsg      = 1;						
    uint64 		  height		     = 2;						
    repeated CheckHash   checkhash   = 3;  
	uint64         max_num         = 4;
}

message SyncBlockInfoAck
{
    SyncHeaderMsg syncHeaderMsg              = 1;						
    repeated CheckHash   invalid_checkhash   = 2; 
    bytes 		  blocks		             = 3;						
	bytes         poolblocks                 = 4;                        
}


message SyncLoseBlockReq
{
	SyncHeaderMsg syncHeaderMsg = 1;
    uint64 		  begin		= 2;
    uint64 		  end       = 3;
    string        all_hash  = 4;
}
message SyncLoseBlockAck
{
	SyncHeaderMsg syncHeaderMsg = 1;
    bytes 		  blocks   = 2;	
}


message SignNodeMsg
{
	bytes  signMsg              = 1;                 
	bytes  signPubKey            = 2;                
	string gasFee               = 3;                 
	double onlineTime           = 4;                 
}


message TxMsg
{
	string       version        = 1;                        
	bytes		 id 			= 2;						
	bytes 		 Tx				= 3;						
	string       txEncodeHash   = 4;                        
	repeated SignNodeMsg signNodeMsg = 5;                   
    uint64 		  top           = 6;
}

message BuileBlockBroadcastMsg
{
	string       version        = 1;                        
	bytes 		blockRaw		= 2;						
}





message TestSendExitNodeReq
{
	string version              = 1;                        
}

message TestGetNodeHeightHashBase58AddrReq
{
	string version              = 1;                        
	string id                   = 2;                        
}

message TestGetNodeHeightHashBase58AddrAck
{
	string version              = 1;                        
	string id                   = 2;                        
	uint64 height               = 3;                        
	string hash                 = 4;                        
	string base58addr           = 5;                        
}